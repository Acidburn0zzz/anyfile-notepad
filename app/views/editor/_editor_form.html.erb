<%= render :partial => 'shared/progress_modal', :locals => {:title => "Your file is being saved", :message => "Press escape to cancel."} %>
<%= render :partial => 'shared/progress_modal', :locals => {:id => "clearance_wait_modal", :title => "Waiting for your preferences to be saved.", :message => "This should take a few seconds. You can skip this step if you're too impatient.", :buttons => {'skip_clearance' => "Skip"}} %>

<div class="g_file_menu" <%= "style=display:none;" if show_minimized?(@file) %>>
  <%= form_for @file, :html => {:class => :editor_form, :multipart => true} do |f| %>
    
    <%= f.hidden_field :id %>
    <%= f.hidden_field :folder_id %>
    <%= f.hidden_field :content %>
    <div>
      <% f.text_field :type, :disabled => true %>
    </div>
      
      
  <div class="panel panel-default">
    <div class="panel-heading">
      
  	<%= render 'editor_menu' %>
   
    

    </div>
    
    <div class="panel-body">
    
   	  
      <div class="file_title input-group">
        
        <%= f.text_field :title, :class=> "field form-control", :placeholder => "File title" %>
        <span class="input-group-btn ">
          <%= link_to "SAVE", "#", :class => "btn btn-primary", :onclick => "javascript:validate_file_size_and_submit(this)"%>
        </span>
      </div>
      <div class="input-group ">
        <%= f.label "Save as new revision", :class => "form-control", :for => "g_file_new_revision" %>
        <span class="input-group-addon">
          <%= f.check_box :new_revision %>
        </span>
      </div>
    </div>
  </div>

    <%= render 'shared/error_messages', :object => f.object %>
      
  <% end %>
  
  <%= render 'shared/flash', :flash => flash %>
  <div class="g_file_editor_file_explorer">
    <%= render 'shared/file_explorer', :with_dropdown => true %>
  </div>
  
  
</div>

<div class="small_g_file_menu" <%= "style=display:none;" if not show_minimized?(@file) %>>
  <span class="glyphicon glyphicon-floppy-save" onclick="javascript:validate_file_size_and_submit(document.getElementsByClassName('editor_form'))" title="Save"></span>
  <span class="glyphicon glyphicon-log-in" onclick="javascript:open_menu()" title="Maximize menu"></span>
</div>

<div class="g_file_editor">
  
  <div id="editor"><%= @file.content %></div>

</div>

<script type="text/javascript">
    var EDITOR_W_MENU_METRICS = {top:"0", bottom:"0", left:"280px", right:"0"}
    var EDITOR_FULL_METRICS = {top:"0", bottom:"0", left:"30px", right:"0"}
    
    var editor = ace.edit("editor");
    var syntax = "<%= @file.syntax.ace_js_mode %>"
    var file_id = "<%= @file.id %>"
    var ajax_defered_waiting = {}
    var skip_clearance = false
    var clearance_interval = null
    $('#skip_clearance').click(function(){skip_clearance = true})
    
    <% if show_minimized?(@file) %>
      INITIAL_METRICS = EDITOR_FULL_METRICS
    <% else %>
      INITIAL_METRICS = EDITOR_W_MENU_METRICS
    <% end %>
    
    $.each( INITIAL_METRICS , function( prop, value ) {
      $('#editor').css(prop,value)
    });
    
    editor.setTheme("ace/theme/dawn");
    editor.getSession().setMode("ace/mode/<%= @file.syntax.ace_js_mode %>");
    
    <% if not @preferences.get_preference('ace_js_font_size').nil? %>
      editor.setFontSize("<%= @preferences.get_preference('ace_js_font_size') %>")
      $('#font_check').show()
      var check = $('#font_check').detach()
      $(document.getElementById("font_<%= @preferences.get_preference('ace_js_font_size') %>")).prepend(check)
    <% end %>
    
    $(".syntax_button").click(function(){set_ace_mode($(this).attr('mode'))})
    $(".font_size_button").click(function(){change_font_size($(this).attr('value'))})
    
    
    function set_ace_mode(mode){
      ajax_defered_waiting['set_ace_mode'] = true
      syntax = mode
      var check = $('#syntax_check').detach();
      $('#syntax_'+mode).prepend(check)
      editor.getSession().setMode("ace/mode/"+mode);
      if(file_id != ""){
        $.ajax(
          {url: '/preferences/get_update?syntaxes[<%= @file.extension %>]='+syntax}
        ).done(function(){
          ajax_defered_waiting['set_ace_mode'] = false
        })
      }
    }
    
    function ready_to_submit(){
      for(key in ajax_defered_waiting){
        //console.log(key)
        if(ajax_defered_waiting[key]){
          return false
        }
        
      }
      return true
    }
    
    function wait_for_clearance(){
      if(ready_to_submit() || skip_clearance){
        clearInterval(clearance_interval)
        $('#clearance_wait_modal').modal('hide')
        validate_file_size_and_submit(null)
      }
      else{
        $('#clearance_wait_modal').modal('show')
      }
    }
    
    function validate_file_size_and_submit(button){
      var length = $('.editor_form').html().length
      if (length > <%= @file.MAX_FILE_SIZE %>){
        alert("File won't be saved. Sorry :( our infrastructure is not badass enough for files that big.")
      }
      else{
        if(ready_to_submit() || skip_clearance){
          $('#g_file_content').val(editor.getValue())
          $('.editor_form').submit()
          $('#progress_modal').modal('show')
          //alert("submit")
        }
        else{
          wait_for_clearance()
          clearance_interval = setInterval(wait_for_clearance, 1000)
          //alert("not ready")
        }
      }
      return false;
    }
    
    function close_menu(){
      ajax_defered_waiting['close_menu'] = true
      $('.g_file_menu').fadeOut(function(){
          $('.g_file_menu').hide(
            function(){$('#editor').animate(EDITOR_FULL_METRICS, function(){
              editor.resize()   
              $('.small_g_file_menu').fadeIn(function(){
                
                $.ajax(
                    {url: '/preferences/get_update?prefers_minimized=true'}
                ).done(function(){
                  ajax_defered_waiting['close_menu'] = false
                })
              })
              
            })
          })
        });
      
    }
    
    function open_menu(){
      ajax_defered_waiting['open_menu'] = true 
      $('.small_g_file_menu').fadeOut()
      $('#editor').animate(EDITOR_W_MENU_METRICS,function(){
        editor.resize()  
        $('.g_file_menu').fadeIn(function(){
            $.ajax(
              {url: '/preferences/get_update?prefers_minimized=false'}
            ).done(function(){
              ajax_defered_waiting['open_menu'] = false
            })
          }
        )
        
      })
      
    }
    
    function change_font_size(font_size){
      ajax_defered_waiting['change_font_size'] = true
      editor.setFontSize(font_size)
      $('#font_check').show()
      var check = $('#font_check').detach()
      $(document.getElementById("font_"+font_size)).prepend(check)
      
      $.ajax(
        {url: '/preferences/get_update?ace_js_font_size='+font_size}
      ).done(function(){
        ajax_defered_waiting['change_font_size'] = false
      })
      
    }
</script>