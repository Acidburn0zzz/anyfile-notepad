<div id="editor_app">
<%= render :partial => 'shared/modal', :locals => {:id => "file_save_modal", :title => "Your file is being saved", :message => "Press escape to close this window. (Your file will still be saved)"} %>
<%= render :partial => 'shared/modal', :locals => {:id => "file_load_modal", :title => "Your file is being loaded", :message => "Depending on the file size, this can be long."} %>
<%= render :partial => 'shared/modal', :locals => {:id => "app_load_modal", :title => "The application is being loaded", :message => ""} %>
<%= render :partial => 'shared/modal', :locals => {:id => "clearance_wait_modal", :title => "Waiting for your preferences to be saved.", :message => "This should take a few seconds. You can skip this step if you're too impatient.", :buttons => {'skip_clearance' => "Skip"}} %>
<%= render 'file_info' %>

<script>
   $("#app_load_modal").modal('show');
</script>

<div style="position:absolute;right:5px;top:5px;">
  <%= render 'shared/skyscraper_ad' %>
</div>

<div id="editor_menu_container">
  <div id="editor_menu" class="g_file_menu" <%= "style=display:none;" if show_minimized?(@file) %>>

    <%= form_for @file, :remote=> true, :html => {:class => :editor_form, :multipart => true} do |f| %>
      
      <%= f.hidden_field :id %>
      <%= f.hidden_field :folder_id %>
      <%= f.hidden_field :content %>
        
        
    <div class="panel panel-default">
      <div class="panel-heading">
        
      <%= render 'editor_menu' %>
     
      

      </div>
      
      <div class="panel-body">
      
        
        <div class="file_title input-group">
          
          <%= f.text_field :title, :onkeydown=>"if(event.keyCode == 13){validate_file_size_and_submit();return false;}" , :class=> "field form-control", :placeholder => "File title" %>
          <span class="input-group-btn ">
            <%= link_to "Save", "#", :class => "editor_save_button btn btn-primary"%>
          </span>
        </div>
        <div class="input-group ">
          <%= f.label "Save as new revision", :class => "form-control", :for => "g_file_new_revision" %>
          <span class="input-group-addon">
            <%= f.check_box :new_revision %>
          </span>
        </div>
      </div>
    </div>

    <div id="editor_errors">
      <%= render 'shared/error_messages', :object => f.object %>
    </div>
    
    <% end %>

    <div id="editor_flash">
      <%= render 'shared/flash', :flash => flash %>
    </div>
    
    <div class="g_file_editor_file_explorer">
      <%= render 'shared/file_explorer', :with_dropdown => true %>
    </div>
    
    <%= render 'shared/editor_message' %>
  </div>
</div>

<div class="small_g_file_menu" <%= "style=display:none;" if not show_minimized?(@file) %>>
  <span class="glyphicon glyphicon-floppy-save" onclick="javascript:editor_controller.save()" title="Save"></span>
  <span class="glyphicon glyphicon-folder-open" onclick="javascript:editor_controller.file_explorer.open()" title="Open file"></span>
  <span class="glyphicon glyphicon-log-in" onclick="javascript:editor_controller.maximize_menu(true)" title="Maximize menu"></span>
</div>

<div class="g_file_editor">
  
  <div id="editor"></div>

</div>

<%= render 'shared/g_reauth'%>
<%= render 'select_theme_modal' %>

</div>
<script type="text/javascript">
var editor_controller = new EditorController("editor_app", {
  'file_id':'<%= @file.id %>',
  'syntax_mode':'<%= @file.syntax.ace_js_mode %>',
  'file_extension':'<%= @file.extension %>',
  'word_wrap_pref':Preference.find('word_wrap', BooleanPreference),
  'show_minimized':<%= show_minimized?(@file) %>,
  'font_size_pref': Preference.find('ace_js_font_size', StringPreference),
  'tab_size_pref' : Preference.find('ace_js_tab_size', StringPreference),
  'MAX_FILE_SIZE':<%= @file.MAX_FILE_SIZE %>, 
  'current_theme':'<%= current_theme %>',
  'menu_width_pref' : Preference.find('menu_width', StringPreference),
  'file_explorer': new FileExplorerController("file_explorer_container", {
    'cached' : <%= @preferences.get_preference('cache_file_explorer_enabled') %>,
    'height_pref' : Preference.find('file_explorer_height', StringPreference),
  }),
})
editor_controller.file_explorer.parent = editor_controller 

var oauth_controller = new OAuthController({
  scopes : "<%= @gapi.get_scopes.join(' ') %>" 
});

editor_controller.oauth_controller = oauth_controller;
oauth_controller.add_to_queue(function(){editor_controller.load_file_if_needed()})


//editor_controller.initialize_html() 

</script>
