var application = new ApplicationController();

[%
locales = {
  "nl"    = "Dutch",
  "en"    = "English",
  "fr"    = "French",
  "de"    = "German",
  "it"    = "Italian",
  "ja"    = "Japanese",
  "pl"    = "Polish",
  "pt-BR" = "Portuguese (BR)",
  "es"    = "Spanish",
  "ro"    = "Romanian",
  "tr"    = "Turkish",
}
%]

var locale_controller = new LocaleController();

[% FOREACH id IN locales.keys %]
[% file = 'locales/_' _ id _ '.json' %]
locale_controller.addLocale("[% id %]", "[% locales.$id %]", [% INCLUDE $file %]);
[% END %]

function i18n(string) {
  return locale_controller.i18n(string)
}

var templates = $('.template');
var partials = $('.template-partial');
var context = {
  locales : locale_controller.nameMap,
  grouped_syntaxes : [% SYNTAXES_JSON %],
  themes : [% THEMES_JSON %],
  application : application,
  ace: ace,
};
for(var i=0; i<3; i++){
  context.themes.unshift("dummy");
}

Handlebars.registerHelper('i18n', locale_controller.i18n);

Handlebars.registerHelper('noaction', function(){return "javascript:void(0)"});

Handlebars.registerHelper('m-action-n-close', function(action){
  action = typeof(action) == "string" ? action : "";
  return 'data-eb-click="top_menu_controller.action_and_close(function(){'+action+'})"'
});

Handlebars.registerHelper('isNull', function(val){
  return val == null;
});

Handlebars.registerHelper('concat', function(){
  var params = Array.from(arguments);
  params = params.slice(0, params.length - 1);
  return params.join('');
});

Handlebars.registerHelper("math", function(lvalue, operator, rvalue, options) {
    lvalue = parseFloat(lvalue);
    rvalue = parseFloat(rvalue);
        
    return {
        "+": lvalue + rvalue,
        "-": lvalue - rvalue,
        "*": lvalue * rvalue,
        "/": lvalue / rvalue,
        "%": lvalue % rvalue
    }[operator];
});

Handlebars.registerHelper("eq", function(param1, param2) {return param1 == param2;});
Handlebars.registerHelper("ne", function(param1, param2) {return param1 != param2;});
Handlebars.registerHelper("ge", function(param1, param2) {return param1 >= param2});
Handlebars.registerHelper("gt", function(param1, param2) {return param1 > param2});
Handlebars.registerHelper("le", function(param1, param2) {return param1 <= param2});
Handlebars.registerHelper("lt", function(param1, param2) {return param1 < param2;});

partials.each(function() {
  var $source = $(this);
  Handlebars.registerPartial($source.data('partial-name'), $source.html());
});

templates.each( function() {
  var $source = $(this);
  var source = $source.html();
  var template = Handlebars.compile(source);
  $(template(context)).insertAfter($source);
});

$("#app_load_modal").modal({'show':true,backdrop: true,backdrop: 'static', keyboard:false});
$('.modal-backdrop.fade.in').css('opacity', '1.0')

var dropbox_oauth_controller = new DropboxOAuthController({});

var oauth_controller = new GoogleOAuthController({
  scopes : [
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/drive openid',
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
    'https://www.googleapis.com/auth/drive.install',
    'https://www.googleapis.com/auth/drive.appdata',
  ],
});

var user_preferences;
var editor_controller;
var top_menu_controller;
var menu_controller = new MenuController("menu");


oauth_controller.add_to_queue(function(){
  user_preferences = new Preferences(
    function(){
      editor_controller = new EditorController("editor_app", {
        'major_notice_pref' : IntPreference.find('major_notice'),
        'menu_width_pref' : StringPreference.find('menu_width'),
        'flash' : new FlashController('editor_flash'),
        'file_explorer': new FileExplorerController("file_explorer_container", {
          'height_pref' : StringPreference.find('file_explorer_height'),
          }),
        'favorites_controller': new FavoritesController({
          favorites_pref:ArrayPreference.find("favorites"),
          menu_controller:menu_controller,
        }),
      })
      editor_controller.favorites_controller.parent = editor_controller;

      editor_controller.file_explorer.parent = editor_controller;
      editor_controller.file_explorer.flash = editor_controller.flash;
      editor_controller.oauth_controller = oauth_controller;
      editor_controller.file_explorer.load();
      


      if(application.dev_mode){
        editor_controller.flash.sticky_warning("<a href='javascript:void(0)' onclick='javascript:application.stop_dev_mode()'>You are using the BETA version of the app. Bugs may occur. Click here to go back to the stable version</a>");
        editor_controller.flash.sticky_success("<a target='_blank' href='http://bit.ly/afn-community'>Found a bug in the BETA version ?<br/>Click here to report it on the community</a>");
      }
      else {
        AppSetting.find("beta-available").then(function(setting)Â {
          if(setting["value"] == "true") {
            editor_controller.flash.sticky_success("<a href='javascript:void(0)' onclick='javascript:application.try_dev_mode()'>Click here to try out the BETA version!</a>");
          }
        }, function(error) {
          console.log("Cannot find beta-available variable to display BETA access.", error)
        });
      }
      if(!String.locale.match('^en')){
        editor_controller.flash.sticky_success("<a target='_blank' href='http://bit.ly/afn-community'>You are using a translated version of the app. Report bad translations by clicking here</a>");
      }

      editor_controller.flash.sticky_success("Application code is now Open Source. <a target='_blank' href='/news'>More details here.</a>");

      new EditorRouter(editor_controller)
      top_menu_controller = new TopMenuController("menu", { 'flash' : editor_controller.flash, 'editor':editor_controller, 'menu':menu_controller });
      editor_controller.top_menu = top_menu_controller;

      // check for browser compat
      setTimeout(function(){
        editor_controller.browser_check();
      }, 5000);
    }
  )
})

//editor_controller.initialize_html() 

$("#current_user").on({
  mouseenter: user_hover_in,
  mouseleave: user_hover_out,
});

function user_hover_in(){
  //$(this).find("#user_details").show();
  var orig = $.data(this, 'dimensions');
  if(!orig) $.data(this, 'dimensions', { width: $(this).outerWidth(), height: $(this).outerHeight() });
  // clear the other things to do and open it
  $("#current_user").stop()
  $("#current_user").animate({width:"500px"}, function(){
  $("#user_details").show()
  $("#current_user").animateAuto('width')
});
}

function user_hover_out(){
  //$(this).find("#user_details").hide();
  var orig = $.data(this, 'dimensions')
  $("#current_user").stop()
  $("#user_details").hide()
  $("#current_user").animate({width:orig.width+"px", height:orig.height+"px"});
}

[% # vim: syntax=javascript 
%]
